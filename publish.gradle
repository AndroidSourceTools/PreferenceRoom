apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply from: '../dependencies.gradle'

ext.repository = [
    description: "Android processing library for managing SharedPreferences persistence efficiently and structurally.",
    websiteUrl : "https://github.com/skydoves/preferenceroom",
    scm        : 'scm:git@github.com/skydoves/preferenceroom.git'
]

def (property_user, property_key) = getBintrayProperties()
bintray {
    user = property_user
    key = property_key

    publications = ["release"]
    publish = true
    override = true
    dryRun = false

    pkg {
        repo = "maven"
        name = repository.name
        userOrg = "devmagician"
        desc = repository.description
        websiteUrl = repository.websiteUrl
        vcsUrl = "${repository.websiteUrl}.git"
        issueTrackerUrl = "${repository.websiteUrl}/issues"
        licenses = ["Apache-2.0"]
        labels = ["android"]
        publicDownloadNumbers = false

        githubRepo = websiteUrl
        githubReleaseNotesFile = "${repository.websiteUrl}/releases"

        version {
            desc = repository.description
            name = versions.versionName
            vcsTag = versions.versionName
            released = new Date()
            gpg { sign = true }
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.java

                group = "com.github.skydoves"
                artifactId = repository.name
                version = versions.versionName

                artifact javadocsJar
                artifact(sourceJar)

                pom {
                    name = repository.name
                    description = repository.description
                    url = repository.websiteUrl
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            id = "skydoves"
                            name = "Jaewoong Eum"
                        }
                    }
                    scm {
                        connection = repository.scm
                        developerConnection = repository.scm
                        url = repository.websiteUrl
                    }
                }
            }
        }
    }
}

def getBintrayProperties() {
    def filename = "local.properties"
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file(filename).newDataInputStream())
        return [
            properties.getProperty("bintray.user"),
            properties.getProperty("bintray.key")
        ]
    } else {
        print(filename + " does not exist!")
        return ["", ""]
    }
}

task checkBintrayConfig {
    doLast {
        def (user, key) = getBintrayProperties()
        if (user == null || user.isEmpty() || key == null || key.isEmpty()) {
            throw new IllegalArgumentException("Must specify Bintray information! Check your local.properties file.")
        }
    }
}

task sourceJar(type: Jar) {
    archiveClassifier = "sources"
}

task javadocs(type: Javadoc) {
    source = sourceSets.main.java.srcDirs
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    archiveClassifier.set('javadoc')
    from javadocs.destinationDir
}
